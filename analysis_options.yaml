# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  rules:
    public_member_api_docs: false
    lines_longer_than_80_chars: false
    library_private_types_in_public_api: false
    sort_pub_dependencies: false
    avoid_equals_and_hash_code_on_mutable_classes: false
    sort_constructors_first: false

dart_code_metrics:
  metrics:
    cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 4
    source-lines-of-code: 50
  metrics-exclude:
    - test/**
  rules:
    - avoid-collection-methods-with-unrelated-types
    - avoid-global-state
    - avoid-missing-enum-constant-in-map
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters
    - binary-expression-operand-order
    - double-literal-format
    - format-comment
    - newline-before-return
    - no-boolean-literal-compare
    - no-equal-then-else
    - no-object-declaration
    - prefer-async-await
    - prefer-commenting-analyzer-ignores
    - prefer-conditional-expressions
    - prefer-first
    - prefer-immediate-return
    - prefer-last
    - prefer-trailing-comma
    - tag-name
    - always-remove-listener
    - avoid-border-all
    - avoid-unnecessary-setstate
    - prefer-const-border-radius
